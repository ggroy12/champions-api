security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api_token_refresh:
            pattern: ^/api/token/refresh
            stateless: true
            lazy: true
        #            refresh_jwt: ~
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

#curl -X POST -H "Content-Type: application/json" http://champions.local/api/login_check -d '{"email":"admin@admin.com","password":"admin"}'
#curl -X GET "http://champions.local/api/users?page=1" -H "Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE2MjYwMTgxMjksImV4cCI6MTYyNjAyMTcyOSwicm9sZXMiOlsiUk9MRV9TVVBFUl9BRE1JTiIsIlJPTEVfVVNFUiJdLCJ1c2VybmFtZSI6ImFkbWluQGFkbWluLmNvbSJ9.ThFz5xrlSBdR0JdLr4V1tsYitvpTJsHlIxxnsj9yNH_uUVMlcoEfeLZL3BlM4EZ9kFb7SoPrXLLD6vAvfdeKivguWuPXFT_LjuMzlBxQ69rwRaQAu8U_ljlpfOSk4J--eiBemONKF8g76JAWONdxvkj-1DML3tUiYsd_3tvp22WUUhmxn6961MmRPYwHnkufKVkldU_17-bnoNRN5wpZsJGszu-xme-mnIMl1s8D14p865Q3xUOmnz8UdP5xbx-tjT6Ms2yHiz7hlPp-c_pje1l6AGuiPaIruokA5MKmDw54f-oap50IUAd2A4CdvQZq5evrb7uPBV_PRw5V_gQ9Kw"
